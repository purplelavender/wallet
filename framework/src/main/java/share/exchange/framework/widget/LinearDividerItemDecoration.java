/** * */package share.exchange.framework.widget;import android.content.Context;import android.graphics.Canvas;import android.graphics.drawable.Drawable;import android.support.v7.widget.RecyclerView;import android.view.View;import share.exchange.framework.R;import share.exchange.framework.utils.ResourcesUtil;/** * * @ClassName:      LinearDividerItemDecoration * @Description:    RecyclerView 的分割线 * @Author:         ZL * @CreateDate:     2019/11/13 18:14 */public class LinearDividerItemDecoration extends RecyclerView.ItemDecoration {    private Drawable mDivider;    private int marginLeft;    private boolean hasHeader;    private boolean hasFooter;    public LinearDividerItemDecoration(Context context) {        mDivider =  ResourcesUtil.getDrawable(context,R.drawable.line_divider);    }    public LinearDividerItemDecoration(Context context, int marginLeft) {        this(context);        this.marginLeft = marginLeft;    }    public LinearDividerItemDecoration(Context context, int marginLeft, boolean hasHeader) {        this(context);        this.marginLeft = marginLeft;        this.hasHeader = hasHeader;    }    public LinearDividerItemDecoration(Context context, int marginLeft, boolean hasHeader, boolean hasFooter) {        this(context);        this.marginLeft = marginLeft;        this.hasHeader = hasHeader;        this.hasFooter = hasFooter;    }    @Override    public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state) {        int left = parent.getPaddingLeft() + marginLeft;        int right = parent.getWidth() - parent.getPaddingRight();        int childCount = parent.getChildCount();        for (int i = 0; i < childCount; i++) {            View child = parent.getChildAt(i);            RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child.getLayoutParams();            int top = child.getBottom() + params.bottomMargin;            int bottom = top + mDivider.getIntrinsicHeight();            if (hasHeader && i == 0) {            }  else if (hasFooter && i == childCount - 1) {            } else {                mDivider.setBounds(left, top, right, bottom);                mDivider.draw(c);            }        }    }}